#1. Pull total number of orders that were completed on 18th March 2023
SELECT Order_id, 
	count(DISTINCT Order_id)
FROM SALES;
WHERE CAST(Date as string)
like "03-18-2023"

#2. Pull total number of orders that were completed on 18th March 2023 with the first name ‘John’ and last name ‘Doe’
SELECT Order_id, 
	count(DISTINCT Order_id)
FROM SALES;
WHERE CAST(Date as string)
like "03-18-2023"
AND Customer_id IN (
  SELECT Customer_id 
  FROM SALES
  WHERE First_Name = 'John' AND Last_Name = 'Doe'
);

#3. Pull total number of customers that purchased in January 2023 and the average amount spend per customer
SELECT *
  COUNT(DISTINCT Customer_id)
  SUM(REVENUE)/COUNT(DISTINCT Customer_id) as revenue_per_customer
FROM SALES;
WHERE Date between "01-01-2023" and "01-31-2023"

#4. Pull the departments that generated less than $600 in 2022
SELECT i.Item_id
FROM Items as i 
LEFT JOIN SALES as s
ON i.Item_id = s.Item_id
WHERE Date BETWEEN '01-01-2022' AND '12-31-2022'
GROUP BY I.department
HAVING SUM(s.Quantity * i.price) < 600;

#5. What is the most and least revenue we have generated by an order
SELECT 
  Order_id, SUM(Revenue) AS total_revenue
FROM SALES
GROUP BY Order_id
ORDER BY total_revenue DESC
LIMIT 1;

SELECT 
  Order_id, SUM(Revenue) AS total_revenue
FROM SALES  
GROUP BY Order_id
ORDER BY total_revenue ASC
LIMIT 1;

#6. What were the orders that were purchased in our most lucrative order
SELECT *
FROM SALES
GROUP BY Order_id
WHERE Revenue = (
    SELECT MAX(Revenue)
    FROM SALES
);
